<lightning_data.PromptDataModule object at 0x7faaa80a2810>
None
['the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table', 'the blue block is on top of the red block and the yellow block is on top of the orange block', ['pick up the yellow block', 'stack the yellow block on top of the orange block']]
['[[0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0, 0, 6, 0]]', '[[0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]', 'select a function']
Training: |          | 0/? [00:00<?, ?it/s]Training:   0%|          | 0/15 [00:00<?, ?it/s]Epoch 0:   0%|          | 0/15 [00:00<?, ?it/s] Train Input Type: float32
Train Output Type: float32
Train Input Shape: (1, 33)
Train Output Shape: (1, 33)
Test Input Type: float32
Test Output Type: float32
Test Input Shape: (1, 33)
Test Output Shape: (1, 33)
{'test': [{'input': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 6.,
        0.]], dtype=float32), 'output': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0.]], dtype=float32)}], 'train': [{'input': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 6.,
        0.]], dtype=float32), 'output': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0.]], dtype=float32)}], 'uuid': 'some_unique_identifier'}
sample {'input': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 6.,
        0.]], dtype=float32), 'output': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0.]], dtype=float32)}
sample {'input': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 0., 0., 6., 0., 0., 6.,
        0.]], dtype=float32), 'output': array([[0., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0.]], dtype=float32)}
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
Input type after conversion (if needed): torch.float32
